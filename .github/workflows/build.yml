name: Build wheels (Windows + macOS)

on:
  push:
    tags:
      - 'main'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ["3.12"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true
        
      - name: Show Python environment
        run: |
          python --version
          python -m pip debug --verbose
          python -m pip list

      - name: Install dependencies
        run: poetry install --no-root

      - name: Install maturin
        run: pip install maturin
        
      - name: Build sdist and wheel
        run: poetry build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-py${{ matrix.python-version }}-dist
          path: dist/
