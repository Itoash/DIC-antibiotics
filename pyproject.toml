[project]
name = "AnalysisGUI"
version = "0.1.1"
description = "AC/DC cell analysis"
authors = [{ name = "Victor Ionescu", email = "vionescu@biodyn.ro" }]
license = "MIT"
readme = "README.md"
requires-python = "==3.12.10"


dependencies = [
    "numpy ~=1.26",
    "pyqtgraph >=0.13.7,<0.14",
    "PyQt5 >= 5.15",
    "opencv-python >=4.11.0.86,<5.0.0",
    "matplotlib >=3.10.1,<3.11",
    "cython >=3.0.12",
    "natsort ~=8.4.0",
    "aicsimageio ~=4.14.0",
    "omnipose @ git+https://github.com/kevinjohncutler/omnipose.git@18ece331bc4d468a670b2c6df8eb1e70bd0f1120",
    "scipy ~=1.11",
    "loky ~=3.5.1",
    "dill ~=0.3.9",
    "networkit <11.1.post1",
    "sif-parser ~=0.3.5"
]

[project.scripts]
startGUI = "AnalysisGUI.__main__:runApp"

[project.optional-dependencies]
dev = [
    "pyinstaller ~=6.13.0"
]

[build-system]
requires = [
    "setuptools>=61",
    "wheel",
    "cython",
    "numpy",
    "setuptools-rust>=1.5.2"
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages]
# Pure Python packages/modules
find = { where = ["."] }

[[tool.setuptools-rust.ext-modules]]
# Private Rust extension module to be nested into the Python package
target = "AnalysisGUI.utils._ac_processor"  # The last part of the name (e.g. "_lib") has to match lib.name in Cargo.toml,
                             # but you can add a prefix to nest it inside of a Python package.    # Default value, can be omitted
binding = "PyO3"      
